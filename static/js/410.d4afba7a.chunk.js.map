{"version":3,"file":"static/js/410.d4afba7a.chunk.js","mappings":"6PAKAA,EAAAA,EAAAA,SAAAA,QAAA,UAHiB,+BAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJU,oCASL,I,UAAMC,EAAe,mCAAG,WAAMC,GAAN,yFAGnBH,EAAAA,EAAAA,IAAA,kBAAqBG,EAArB,cAHmB,uBAEnBC,EAFmB,EAE3BC,KAAQD,QAFmB,kBAKtBA,GALsB,2CAAH,sD,uCCVfE,EAAcC,EAAAA,EAAAA,GAAH,4EAGb,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAGCC,EAASL,EAAAA,EAAAA,GAAH,6EAMNM,EAASN,EAAAA,EAAAA,EAAH,sHAQNO,EAAUP,EAAAA,EAAAA,EAAH,qDAKPQ,EAAWR,EAAAA,EAAAA,EAAH,sG,SCyBrB,EArCgB,WACd,IAAQS,GAAOC,EAAAA,EAAAA,IAAU,IAAjBD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAEyBnB,EAAgBc,GAFzC,OAESZ,EAFT,OAIGgB,EAAgBhB,GAJnB,gDAMGkB,EAAAA,GAAAA,MAAA,UACK,KAAMC,QADX,mDANH,wDAAD,EAWD,GAAE,CAACP,KAGF,gCACGG,EAAaK,OAAS,IACrB,SAAClB,EAAD,UACGa,EAAaM,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,UAACf,EAAD,YACE,UAACC,EAAD,sBAAiBa,MACjB,SAACZ,EAAD,UAAUa,MAFCX,EADG,OAQpBG,EAAaK,SACb,SAACT,EAAD,0DAIP,C","sources":["api/api-reviews-movie.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst ENDPOINT = 'https://api.themoviedb.org/';\nconst KEY = '81f7e5d829987e856b2ed6841a3a514f';\n\naxios.defaults.baseURL = `${ENDPOINT}`;\naxios.defaults.params = {\n  api_key: KEY,\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=81f7e5d829987e856b2ed6841a3a514f\n\nexport const getReviewsMovie = async idMovie => {\n  const {\n    data: { results },\n  } = await axios.get(`3/movie/${idMovie}/reviews?`);\n\n  return results;\n};\n","import styled from '@emotion/styled';\n\nexport const WrapReviews = styled.ul`\n  padding: 20px 80px;\n  margin: 0;\n  color: ${p => p.theme.colors.dark};\n`;\n\nexport const Review = styled.li`\n  margin: 0;\n  margin-bottom: 15px;\n  padding: 0;\n`;\n\nexport const Author = styled.p`\n  margin: 0;\n  margin-bottom: 10px;\n  padding: 0;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const Content = styled.p`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const TextInfo = styled.p`\n  margin: 0;\n  padding: 20px 40px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviewsMovie } from 'api/api-reviews-movie';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  Author,\n  Content,\n  Review,\n  TextInfo,\n  WrapReviews,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams('');\n  const [reviewsMovie, setReviewsMovie] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const results = await getReviewsMovie(id);\n\n        setReviewsMovie(results);\n      } catch (error) {\n        toast.error(\n          `${error.message}. Info loading error. Restart the application.`\n        );\n      }\n    })();\n  }, [id]);\n\n  return (\n    <>\n      {reviewsMovie.length > 0 && (\n        <WrapReviews>\n          {reviewsMovie.map(({ id, author, content }) => (\n            <Review key={id}>\n              <Author>Author: {author}</Author>\n              <Content>{content}</Content>\n            </Review>\n          ))}\n        </WrapReviews>\n      )}\n      {!reviewsMovie.length && (\n        <TextInfo>We don`t have any reviews fro this movie.</TextInfo>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","getReviewsMovie","idMovie","results","data","WrapReviews","styled","p","theme","colors","dark","Review","Author","Content","TextInfo","id","useParams","useState","reviewsMovie","setReviewsMovie","useEffect","toast","message","length","map","author","content"],"sourceRoot":""}