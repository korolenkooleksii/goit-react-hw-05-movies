{"version":3,"file":"static/js/32.64fa6092.chunk.js","mappings":"4PAKAA,EAAAA,EAAAA,SAAAA,QAAA,UAHiB,+BAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJU,oCAOL,I,YAAMC,EAAY,mCAAG,WAAMC,GAAN,yFACKH,EAAAA,EAAAA,IAAA,kBAAqBG,EAArB,cADL,uBACXC,EADW,EAClBC,KAAOD,KADW,kBAEnBA,GAFmB,2CAAH,sD,mBCRZE,EAAWC,EAAAA,EAAAA,GAAH,qLAQV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAGCC,EAAYL,EAAAA,EAAAA,GAAH,sBAETM,EAAgBN,EAAAA,EAAAA,IAAH,+EAMbO,EAAYP,EAAAA,EAAAA,IAAH,kGAOTQ,EAAYR,EAAAA,EAAAA,EAAH,+CAITS,EAAWT,EAAAA,EAAAA,EAAH,sG,6BCiCrB,EA5Ca,WACX,IAAQU,GAAOC,EAAAA,EAAAA,IAAU,IAAjBD,GACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAEyBpB,EAAae,GAFtC,OAESM,EAFT,OAIGF,EAAaE,GAJhB,gDAMGC,EAAAA,GAAAA,MAAA,UACK,KAAMC,QADX,mDANH,wDAAD,EAWD,GAAE,CAACR,KAGF,gCACGG,EAAUM,OAAS,IAAK,SAACpB,EAAD,UACtBc,EAAUO,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcZ,EAAvB,EAAuBA,GAAvB,OACb,UAACL,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEgB,IACED,EACIE,iCAAuBF,EA7BzB,oDAgCJG,IAAKJ,EACLK,MAAM,WAGV,SAAClB,EAAD,UAAYa,MAZEX,EADH,OAiBfG,EAAUM,SAAU,SAACV,EAAD,uDAI3B,C","sources":["api/api-cast-movie.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst ENDPOINT = 'https://api.themoviedb.org/';\nconst KEY = '81f7e5d829987e856b2ed6841a3a514f';\n\naxios.defaults.baseURL = `${ENDPOINT}`;\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getCastMovie = async idMovie => {\n  const { data: {cast} } = await axios.get(`3/movie/${idMovie}/credits?`);\n  return cast;\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  justify-content: center;\n  margin-top: 30px;\n  padding: 0 40px;\n  list-style: none;\n  color: ${p => p.theme.colors.dark};\n`;\n\nexport const ActorCard = styled.li``;\n\nexport const WrapActorCard = styled.div`\n  width: 154px;\n  height: auto;\n  overflow: hidden;\n`;\n\nexport const ActorFoto = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const ActorName = styled.p`\n  text-align: center;\n`;\n\nexport const TextInfo = styled.p`\n  margin: 0;\n  padding: 20px 40px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCastMovie } from 'api/api-cast-movie';\n\nimport {\n  ActorCard,\n  ActorFoto,\n  ActorName,\n  CastList,\n  TextInfo,\n  WrapActorCard,\n} from './Cast.styled';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst BASE_URL = 'http://image.tmdb.org/t/p/';\nconst LOGO_SIZE = 'w154';\nconst defaultFoto = 'https://via.placeholder.com/200x300?text=no+photo';\n\nconst Cast = () => {\n  const { id } = useParams('');\n  const [castMovie, setCastMovie] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const results = await getCastMovie(id);\n\n        setCastMovie(results);\n      } catch (error) {\n        toast.error(\n          `${error.message}. Info loading error. Restart the application.`\n        );\n      }\n    })();\n  }, [id]);\n\n  return (\n    <>\n      {castMovie.length > 0 && <CastList>\n        {castMovie.map(({ name, profile_path, id }) => (\n          <ActorCard key={id}>\n            <WrapActorCard>\n              <ActorFoto\n                src={\n                  profile_path\n                    ? BASE_URL + LOGO_SIZE + profile_path\n                    : defaultFoto\n                }\n                alt={name}\n                width=\"154\"\n              />\n            </WrapActorCard>\n            <ActorName>{name}</ActorName>\n          </ActorCard>\n        ))}\n      </CastList>}\n      {!castMovie.length && <TextInfo>We don`t have any cast fro this movie.</TextInfo>} \n      \n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","api_key","getCastMovie","idMovie","cast","data","CastList","styled","p","theme","colors","dark","ActorCard","WrapActorCard","ActorFoto","ActorName","TextInfo","id","useParams","useState","castMovie","setCastMovie","useEffect","results","toast","message","length","map","name","profile_path","src","BASE_URL","alt","width"],"sourceRoot":""}