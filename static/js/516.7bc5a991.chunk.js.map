{"version":3,"file":"static/js/516.7bc5a991.chunk.js","mappings":"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","sources":["components/CardMovie/CardMovie.styled.jsx","components/CardMovie/CardMovie.jsx","api/api-info-movie.js","pages/FullInfo.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const InfoByMovie = styled.div`\n  padding: 15px 40px 40px 40px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  border-bottom: 1px solid ${p => p.theme.colors.grey};\n  box-shadow: ${p => p.theme.colors.shadow};\n  color: ${p => p.theme.colors.dark};\n`;\n\nexport const WrapPoster = styled.div`\n  width: 350px;\n  height: 400px;\n  overflow: hidden;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const Title = styled.h1``;\n\nexport const AboutMovie = styled.h2``;\n\nexport const Genres = styled.h3``;\n\nexport const WrapInfo = styled.div``;\n\nexport const Text = styled.p`\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const WrapAdd = styled.div`\n  padding: 20px 40px;\n  border-bottom: 1px solid ${p => p.theme.colors.grey};\n  box-shadow: ${p => p.theme.colors.shadow};\n\n`;\n\nexport const AddList = styled.ul`\n  margin: 0;\n  margin-top: 10px;\n  padding-left: 40px;\n`;\n\nexport const AddItem = styled.li`\n  margin: 5px;\n  color: ${p => p.theme.colors.dark};\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 18px;\n  font-weight: 600;\n  text-decoration: none;\n  color: ${p => p.theme.colors.blue};\n  transition: all 300ms ease-out;\n\n  :hover {\n    color: ${p => p.theme.colors.orange};\n    text-decoration: underline;\n  }\n`;\n\nexport const LinkBack = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap:8px;\n  margin: 15px 0 0 40px;\n  padding: 2px 10px;\n  border: 1px solid ${p => p.theme.colors.dark};\n  border-radius: 4px;\n  font-size: 18px;\n  font-weight: 600;\n  text-decoration: none;\n  background-color: ${p => p.theme.colors.noActive};\n  color: ${p => p.theme.colors.dark};\n  transition: all 300ms ease-out;\n\n  :hover {\n    color: ${p => p.theme.colors.orange};\n    /* text-decoration: underline; */\n    border: 1px solid ${p => p.theme.colors.orange};\n    /* background-color: ${p => p.theme.colors.accent}; */\n    }\n`;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { TbArrowNarrowLeft } from 'react-icons/tb';\n\nimport {\n  InfoByMovie,\n  Poster,\n  Text,\n  AboutMovie,\n  Title,\n  Genres,\n  WrapInfo,\n  WrapPoster,\n  WrapAdd,\n  AddList,\n  Link,\n  AddItem,\n  LinkBack,\n} from './CardMovie.styled';\n\nconst BASE_URL = 'http://image.tmdb.org/t/p/';\nconst LOGO_SIZE = 'w780';\nconst defaultFoto = 'https://via.placeholder.com/400x400?text=no+photo';\n\nexport const CardMovie = ({ data }) => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const { poster_path, title, genres, overview, release_date, vote_average } =\n    data;\n\n  return (\n    <>\n      <LinkBack to={backLinkLocationRef.current}>\n        <TbArrowNarrowLeft />\n        Go back\n      </LinkBack>\n      {title && (\n        <>\n          <InfoByMovie>\n            <WrapPoster>\n              <Poster\n                src={\n                  poster_path ? BASE_URL + LOGO_SIZE + poster_path : defaultFoto\n                }\n                alt={title}\n              />\n            </WrapPoster>\n            <WrapInfo>\n              <Title>\n                {title} ({release_date ? release_date.slice(0, 4) : 'no date'})\n              </Title>\n              <Text>User Score: {(vote_average * 10).toFixed(2)}%</Text>\n              <AboutMovie>Overview</AboutMovie>\n              <Text>{overview ? overview : 'No overview'}</Text>\n              <Genres>Genres</Genres>\n              <Text>{genres.map(genre => genre.name).join(' ')}</Text>\n            </WrapInfo>\n          </InfoByMovie>\n          <WrapAdd>\n            <Text>Additional information</Text>\n            <AddList>\n              <AddItem>\n                <Link to=\"cast\">Cast</Link>\n              </AddItem>\n              <AddItem>\n                <Link to=\"reviews\">Reviews</Link>\n              </AddItem>\n            </AddList>\n          </WrapAdd>\n        </>\n      )}\n    </>\n  );\n};\n\nCardMovie.propTypes = {\n  data: PropTypes.shape({\n    poster_path: PropTypes.any,\n    title: PropTypes.string,\n    genres: PropTypes.array,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n};\n","import axios from 'axios';\n\nconst ENDPOINT = 'https://api.themoviedb.org/';\nconst KEY = '81f7e5d829987e856b2ed6841a3a514f';\n\naxios.defaults.baseURL = `${ENDPOINT}`;\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getFullInfoMovie = async idMovie => {\n  const { data } = await axios.get(`3/movie/${idMovie}?`);\n\n  return data;\n};\n\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\n\nimport { CardMovie } from 'components/CardMovie';\nimport { Loader } from 'components/Loader';\n\nimport { getFullInfoMovie } from 'api/api-info-movie'; \n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst FullInfo = () => {\n  const { id } = useParams('');\n\n  const [idMovie, setIdMovie] = useState({});\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const results = await getFullInfoMovie(id);\n\n        setIdMovie(results);\n      } catch (error) {\n        toast.error(\n          `${error.message}. Movie loading error. Restart the application.`\n        );\n      }\n    })();\n  }, [id]);\n\n  return (\n    <main>\n      <CardMovie data={idMovie} />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default FullInfo;\n"],"names":["InfoByMovie","styled","p","theme","colors","grey","shadow","dark","WrapPoster","Poster","Title","AboutMovie","Genres","WrapInfo","Text","WrapAdd","AddList","AddItem","Link","NavLink","blue","orange","LinkBack","noActive","accent","CardMovie","data","location","useLocation","backLinkLocationRef","useRef","state","from","poster_path","title","genres","overview","release_date","vote_average","to","current","src","BASE_URL","alt","slice","toFixed","map","genre","name","join","axios","api_key","getFullInfoMovie","idMovie","id","useParams","useState","setIdMovie","useEffect","results","toast","message","Suspense","fallback","Loader"],"sourceRoot":""}