{"version":3,"file":"static/js/501.47a48882.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","api/api-search-movies.js","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nimport styled from '@emotion/styled';\n\nexport const TextTrends = styled.h1`\n  margin: 0;\n  padding-top: 20px;\n  padding-left: 40px;\n  color: ${p => p.theme.colors.dark};\n`;\n\nexport const TrendsList = styled.ul`\n  margin: 0;\n  margin-top: 20px;\n  padding-left: 60px;\n`;\n\nexport const Trend = styled.li`\n  margin: 0;\n  color: ${p => p.theme.colors.dark};\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 20px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.blue};\n  transition: all 300ms ease-out;\n\n  :hover {\n    color: ${p => p.theme.colors.orange};\n    text-decoration: underline;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { TextTrends, TrendsList, Trend, Link } from './MoviesList.styled';\n\nexport const MoviesList = ({ data, message = '', location }) => {\n  const locationList = useLocation();\n  const goTo = location.pathname;\n\n  return (\n    <>\n      {message && <TextTrends>{message}</TextTrends>}\n\n      <TrendsList>\n        {data.map(el => (\n          <Trend key={el.id}>\n            <Link\n              to={goTo === '/' ? `movies/${el.id}` : `${el.id}`}\n              state={{ from: locationList }}\n            >\n              {el.title}\n            </Link>\n          </Trend>\n        ))}\n      </TrendsList>\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst ENDPOINT = 'https://api.themoviedb.org/';\nconst KEY = '81f7e5d829987e856b2ed6841a3a514f';\n\naxios.defaults.baseURL = `${ENDPOINT}`;\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getSearchMovie = async movie => {\n  const {\n    data: { results },\n  } = await axios.get(`3/search/movie?&query=${movie}`);\n  return results;\n};\n","import styled from '@emotion/styled';\n\n\n\nexport const SearchForm = styled.form`\n  margin-top: 20px;\n  margin-left: 40px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  background-color: #fff;\n  border: 1px solid #8080804e;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 45px;\n  height: 40px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  color: ${p => p.theme.colors.grey};\n\n  :hover {\n    color: ${p => p.theme.colors.orange};\n    background-color: #e2e0e0;\n  }\n\n  svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding: 5px 10px;\n  color: ${p=>p.theme.colors.dark};\n\n  ::placeholder {\n    font: inherit;\n    color: grey;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { MoviesList } from 'components/MoviesList';\n\nimport { getSearchMovie } from 'api/api-search-movies';\n\nimport { SearchForm, SearchButton, SearchInput } from './SearchBar.styled';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const SearchBar = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query' ?? '');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) return;\n\n    (async () => {\n      try {\n        const results = await getSearchMovie(query);\n        if (!results.length) {\n          toast.info('There are no movies for your request.');\n          return;\n        }\n        setMovies(results);\n      } catch (error) {\n        toast.error(\n          `${error.message}. Movies loading error. Restart the application.`\n        );\n      }\n    })();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (e.target.elements.text.value === '') {\n      toast.error('Enter movie title.');\n      return;\n    }\n\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.text.value.trim() });\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter movie title\"\n          name=\"text\"\n        />\n        <SearchButton type=\"submit\">\n          <BsSearch />\n        </SearchButton>\n      </SearchForm>\n      {movies && <MoviesList data={movies} location={location} />}\n    </>\n  );\n};\n","import { SearchBar } from 'components/SearchBar';\n\nconst Movies = () => {\n  return (\n    <main>\n      <SearchBar />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["TextTrends","styled","p","theme","colors","dark","TrendsList","Trend","Link","NavLink","blue","orange","MoviesList","data","message","location","locationList","useLocation","goTo","pathname","map","el","to","id","state","from","title","axios","api_key","getSearchMovie","movie","results","SearchForm","SearchButton","grey","SearchInput","SearchBar","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","length","toast","onSubmit","e","preventDefault","target","elements","text","value","form","currentTarget","trim","reset","type","autoComplete","autoFocus","placeholder","name"],"sourceRoot":""}